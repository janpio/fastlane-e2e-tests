default_platform('ios')

platform :ios do
  lane :all do
    create_appfile

    run_scan_init
    config_scan
    run_scan
    tests

    run_produce
    create_app

    config_match
    run_match
    certificates

    run_gym_init
    config_gym
    run_gym
    build

    run_snapshot_init
    config_snapshot
    run_snapshot
    screenshots


  end

  #######################################################

  lane :create_appfile do
    create_file('Appfile')
    write_to_file('app_identifier("' + ENV['APP_IDENTIFIER'] + '")', 'Appfile')
    write_to_file('apple_id("' + ENV['APPLE_ID'] + '")', 'Appfile')
  end

  #######################################################

  lane :run_scan_init do
    run_fastlane('scan init')
  end

  lane :config_scan do
    write_to_file('project("iosapp/iosapp.xcodeproj")', 'Scanfile')
  end

  lane :run_scan do
    run_fastlane('scan')
  end

  lane :tests do
    run_tests
  end

  #######################################################

  # Apple Developer Console + App Store Connect
  # fastlane produce
  #   fastlane ios run_produce
  # fastlane ios create_app (create_app_online)

  lane :run_produce do
    run_fastlane('produce --app_name="Fastlane iOS ManInteg"')
  end

  lane :create_app do
    create_app_online(
      app_name: "Fastlane iOS ManInteg2"
    )
  end

  #######################################################

  lane :run_match_init do
    # ??? TODO
  end

  lane :config_match do
    write_to_file('git_url("'+ ENV['MATCH_REPO'] + '")', 'Matchfile')
  end

  lane :run_match do
    run_fastlane('match')
  end

  lane :certificates do
    sync_code_signing(
      #force: true
    )
  end

  # TODO: match nuke

  #######################################################

  lane :run_gym_init do
    run_fastlane('gym init')
  end

  lane :config_gym do
    write_to_file('project("iosapp/iosapp.xcodeproj")', 'Gymfile')
  end

  # TODO: Try on Mac - on Windows this is all a dead end of course

  lane :run_gym do
    run_fastlane('gym')
  end

  lane :build do
    build_ios_app
  end

  #######################################################

  # TODO: Try on Mac - on Windows this is all a dead end of course

  lane :run_snapshot_init do
    run_fastlane('snapshot init')
  end

  lane :config_snapshot do
    write_to_file('???', '???')
  end

  lane :run_snapshot do
    run_fastlane('snapshot')
  end

  lane :screenshots do
    capture_ios_screenshots
  end

  #######################################################

  lane :run_frameit_download_frames do
    run_fastlane('frameit download_frames')
  end

  lane :run_frameit do
    run_fastlane('frameit')
  end

  lane :run_frameit_silver do
    run_fastlane('frameit silver')
  end

  lane :frame do
    frame_screenshots
  end

  #######################################################

end

#######################################################

def create_file(file)
  sh('touch ' + file)
end

def write_to_file(string, file)
  # TODO: handle array
  sh('echo ' + string + ' >> ' + file)
  # TODO: replace by "set_in_file" that changes a value if the "method" already exists
end

def run_fastlane(command)
  Dir.chdir '..' do
    sh('bundle exec fastlane ' + command)
  end
end
