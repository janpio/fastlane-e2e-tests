default_platform('ios')

platform :ios do
  lane :all do
    create_appfile

    # test
    run_scan_init
    config_scan
    run_scan
    tests

    # create
    run_produce
    create_app

    # certificates
    config_match
    run_match
    certificates

    # build
    run_gym_init
    config_gym
    run_gym
    build

    # screenshots
    run_snapshot_init
    config_snapshot
    run_snapshot
    screenshots

    # frame
    run_frameit_download_frames
    run_frameit
    run_frameit_silver
    frame

    # download
    run_deliver_init
    # TODO reset_deliver_data
    run_deliver_download_screenshots
    # TODO reset_deliver_data
    run_deliver_download_metadata
    # TODO reset_deliver_data

    # upload
    run_deliver
    upload
    run_deliver_submit_build

    # upload testflight
    run_pilot_upload
    upload_testflight

    # manage testflight
    run_pilot_builds
    run_pilot_list
    run_pilot_add
    run_pilot_list
    run_pilot_import
    run_pilot_list
    run_pilot_find
    run_pilot_export
    run_pilot_remove
    run_pilot_list
    run_pilot_distribute

    cleanup
  end

  #######################################################

  lane :create_appfile do
    create_file('Appfile')
    write_to_file('app_identifier("' + ENV['APP_IDENTIFIER'] + '")', 'Appfile')
    write_to_file('apple_id("' + ENV['APPLE_ID'] + '")', 'Appfile')
  end

  #######################################################

  lane :run_scan_init do
    run_fastlane('scan init')
  end

  lane :config_scan do
    write_to_file('project("iosapp/iosapp.xcodeproj")', 'Scanfile')
  end

  lane :run_scan do
    run_fastlane('scan')
  end

  lane :tests do
    run_tests
  end

  #######################################################

  # Apple Developer Console + App Store Connect
  # fastlane produce
  #   fastlane ios run_produce
  # fastlane ios create_app (create_app_online)

  lane :run_produce do
    run_fastlane('produce --app_name="Fastlane iOS ManInteg"')
  end

  lane :create_app do
    create_app_online(
      app_name: "Fastlane iOS ManInteg2"
    )
  end

  #######################################################

  lane :run_match_init do
    # ??? TODO
  end

  lane :config_match do
    write_to_file('git_url("'+ ENV['MATCH_REPO'] + '")', 'Matchfile')
  end

  lane :run_match do
    run_fastlane('match')
  end

  # TODO
  #development
  #appstore
  #adhoc

  lane :certificates do
    sync_code_signing(
      #force: true
    )
  end

  # TODO: match nuke

  #######################################################

  lane :run_gym_init do
    run_fastlane('gym init')
  end

  lane :config_gym do
    write_to_file('project("iosapp/iosapp.xcodeproj")', 'Gymfile')
  end

  # TODO: Try on Mac - on Windows this is all a dead end of course

  lane :run_gym do
    run_fastlane('gym')
  end

  # TODO
  # debug
  # release

  lane :build do
    build_ios_app
  end

  # TODO
  # debug
  # release

  #######################################################

  # TODO: Try on Mac - on Windows this is all a dead end of course

  lane :run_snapshot_init do
    run_fastlane('snapshot init')
  end

  lane :config_snapshot do
    write_to_file('???', '???')
  end

  lane :run_snapshot do
    run_fastlane('snapshot')
  end

  lane :screenshots do
    capture_ios_screenshots
  end

  # TODO fastlane snapshot update
  # TODO fastlane snapshot reset_simulators

  #######################################################

  lane :run_frameit_download_frames do
    run_fastlane('frameit download_frames')
  end

  lane :run_frameit do
    run_fastlane('frameit')
  end

  lane :run_frameit_silver do
    run_fastlane('frameit silver')
  end

  lane :frame do
    frame_screenshots(
      path: 'pseudoscreenshots'
    )
  end

  #######################################################

  lane :run_deliver_init do
    run_fastlane('deliver init')
  end

  lane :config_deliver do
    # TODO
  end

  lane :reset_deliver_data do
    # TODO
  end

  lane :run_deliver_download_screenshots do
    run_fastlane('deliver download_screenshots')
  end

  lane :run_deliver_download_metadata do
    run_fastlane('deliver download_metadata')
  end

  lane :run_deliver do
    run_fastlane('deliver --force')
  end

  lane :upload do
    upload_to_app_store(
      force: true,
      submit_for_review: true
    )
  end

  lane :run_deliver_submit_build do
    run_fastlane('deliver submit_build')
  end

  #######################################################

  # TODO Testflight

  lane :run_pilot_upload do
    #run_fastlane('pilot upload')
  end

  lane :upload_testflight do
    #upload_to_testflight
  end

  lane :run_pilot_builds do
    #run_fastlane('pilot builds')
  end

  lane :run_pilot_list do
    #run_fastlane('pilot list')
  end

  lane :run_pilot_add do
    #run_fastlane('pilot add x')
  end

  lane :run_pilot_import do
    #run_fastlane('pilot import')
  end

  lane :run_pilot_find do
    #run_fastlane('pilot find x')
  end

  lane :run_pilot_export do
    #run_fastlane('pilot export')
  end

  lane :run_pilot_remove do
    #run_fastlane('pilot remove x')
  end

  lane :run_pilot_distribute do
    #run_fastlane('pilot distribute')
  end

  #######################################################

  lane :cleanup do
    remove_file('Appfile')
    remove_file('Deliverfile')
    remove_file('Gymfile')
    remove_file('Scanfile')
  end

  #######################################################
end

#######################################################

import("../../Fastfile_common_methods")
